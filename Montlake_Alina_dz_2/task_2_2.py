"2. Дан список.Необходимо его обработать — обособить каждое целое число (вещественные не трогаем)"
"кавычками (добавить кавычку до и кавычку после элемента списка, являющегося числом) и дополнить нулём до двух целочисленных разрядов."
original = ['в', '5', 'часов', '17', 'минут', 'температура', 'воздуха', 'была', '+5', 'градусов']
modified = ['в', '"', '05', '"', 'часов', '"', "17", '"', 'минут', 'температура', 'воздуха', 'была', '"', '+05', '"',  'градусов']
original = original[0] + ' "' + "0" + original[1] + '" ' + original[2] + ' "' + original[3] + '" ' + original[4] + ' ' + original[5] + ' ' + original[6] + ' ' + original [7] +' "' + '+05' + '" ' + original[9]
print (modified)
print (original)

"Подумать, какое условие записать, чтобы выявить числа среди элементов списка? Как модифицировать это условие для чисел со знаком?"

original = ['в', '5', 'часов', '17', 'минут', 'температура', 'воздуха', 'была', '+5', 'градусов']
for element in original:
    element = original.pop(0)
    "Проверяю, является ли значение строки числом через isdigit" 
    if element.isdigit():
        "Для вывода значения строки в "" добавляю f-строку с кавычками, переформатирую значение в число и ограничиваю 2 разрядами и 0 слева"
        original.append(f'"{int(element):02d}"')
    elif element[0] == "+" and element[1].isdigit():
        "Для вывода значения строки в "" добавляю f-строку с кавычками и знаком +, переформатирую значение в число и ограничиваю 2 разрядами и 0 слева"
        original.append(f'"+{int(element):02d}"')
    else:
        original.append(element)
"Ставлю join, чтобы красиво отобразить строку с пробелом в качестве разделителя"
print(' '.join(original))
